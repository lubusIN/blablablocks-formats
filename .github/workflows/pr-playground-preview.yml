name: Build and Comment on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Create zip of project excluding node_modules, .git, .github
        run: |
          zip -r build.zip . -x "node_modules/**" ".git/**" ".github/**"

      - name: Upload build.zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-zip
          path: build.zip
          retention-days: 5

  comment:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Get artifact URL and comment
        uses: actions/github-script@v7
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID;
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner,
              repo,
              run_id: runId,
            });

            const artifact = artifacts.data.artifacts.find(a => a.name === "build-zip");
            if (!artifact) {
              throw new Error("Artifact not found");
            }

            const downloadUrl = artifact.archive_download_url;

            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            const body = `📦 Build Artifact Ready\n\n🔗 [Download ZIP (GitHub login required)](${downloadUrl})\n\n🌐 Playground URL (requires publicly hosted ZIP):\nhttps://playground.wordpress.net/?plugin=${downloadUrl}`;

            const existingComment = comments.data.find(c =>
              c.body.includes("📦 Build Artifact Ready")
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body,
              });
            }
