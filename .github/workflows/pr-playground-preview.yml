name: Build and Comment on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Create zip file of build output
        run: |
          zip -r build.zip . -x "node_modules/*" "node_modules/**"

      - name: Upload build.zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-zip
          path: build.zip
          retention-days: 5

  comment:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Download build.zip artifact
        uses: actions/download-artifact@v4
        with:
          name: build-zip
          path: ./

      - name: Get PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            return {
              number: pr.number,
              repo: context.repo.repo,
              owner: context.repo.owner
            };

      - name: Create or update PR comment with ZIP URL
        uses: actions/github-script@v7
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID;
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${runId}/artifacts`;
            const zipUrl = `https://playground.wordpress.net/?plugin=${artifactUrl}`;

            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            const body = `ðŸ”— Plugin ZIP ready for testing:\n\nðŸ‘‰ ${zipUrl}`;

            const existingComment = comments.data.find(c =>
              c.body.includes("Plugin ZIP ready for testing")
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body,
              });
            }
